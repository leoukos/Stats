### Régréssion non linéaire ###
# TP2 : Bootstrap non paramétrique

### Notes ###
# Tirage aléatoire de 20 valeurs entre 0 et 20
sample(1:20, 20)
# Tirage aléatoire de 20 valeurs entre 0 et 20 avec remise
sample(1:20, 20)

### Partie 1 - Acier ###
# R : résistance de l'acier à la traction
# C : teneur carbonnée
# Téléchargement des données et résumé
carbone = read.table("http://lmi.insa-rouen.fr/~portier/Data/carbone.txt",header=TRUE)
summary(carbone)
attach(carbone)

# 1. Coefficient de corrélation linéaire
cor(C, R)

# 2. Biais de l'erreur standard
n = length(R)
# 2000 
B = 1000
biais = NULL
stde = NULL
est = NULL
for(b in 1:B){
	ind = sample(1:n, n, replace=TRUE)
	biais[b] = cor(C[ind], R[ind]) - cor(C, R)
	stde[b] = cor(C[ind], R[ind])
	est[b] = cor(C, R) - biais[b]
}
# Verifier avec freq probability densité pour ne pas avoir/avoir les effectifs
hist(est, freq=F, breaks=6, xlab="Estimation coefficient de corrélation linéaire par bootstrap", ylab="Fréquence" ,main="Histogramme en fréquence")
boxplot(est)
# Estimateur boostrapé
mean(est)-cor(C, R)
# Erreur standard
sd(est)
# A faire pour plusieurs valeurs de B



### Partie 2 - Tension systolique ###
# T : tension systolique
# A : âge
systolique = read.table("http://lmi.insa-rouen.fr/~portier/Data/systolique.txt",header=TRUE)
summary(systolique)
attach(systolique)

# 1. Etude descriptive des données
# on va utiliser le modèle linéaire gaussien simple
cor(Age, Tension)
model <- lm(Tension~Age)
anova(model)
plot(systolique, main="Age en fonction de la tension")
abline(model$coef, col=2, lwd=2)
plot(model$resid, main="Résidus", xlab="Age", ylab="Tension")
abline(0,0,col=2,lwd=2)

# 2. Calcul de prévision
# Méthode des pourcentiles simples (!!! SUR L'AGE ET LA TENSION !!!)




### Partie 3 ###
