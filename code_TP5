### Estimation non-paramétrique de la fonction de régression

# fonction
f = function(x){
  f = x*x - 1
}

# erreur quadratique
# mse(y, y^)

# Simulations
simul = function(x, y, n){
  sig2 = 0.25
  x = rnorm(n, mean=0, sd=1)
  y = f(x) + rnorm(n, mean=0, sd=sig2) 
}

# MSE
mse = function(y,fn){
  n = length(y)
  mse = 0
  for(i in 1:n){
    mse = mse + (y[i] - fn[i])^2
  }
  mse = 1/n * mse
}

t = seq(-3, 3, 0.05)
n = 1000
sig2 = 0.25
x = rnorm(n, mean=0, sd=1)
y = f(x) + rnorm(n, mean=0, sd=sig2) 


# Question 2
par(mfrow=c(2,2))

for(n in c(100, 200, 500, 1000)){
  res = ksmooth(x[1:n], y[1:n], x.point = t)
  plot(t, f(t), lwd=2, type="line")
  lines(res$x, res$y, col="red", lwd=2)
  rug(x)
}


# Question 3
par(mfrow=c(2,2))
n = 1000
sigc = mse(x, y)
for(a in c(0.1, 0.2, 0.5, 0.8)){
  hn = sigc * n^(-a)
  res = ksmooth(x[1:n], y[1:n], x.point=t, bandwidth=hn)
  plot(t, f(t), lwd=2, type="line")
  lines(res$x, res$y, col="red", lwd=2)
  rug(x)
}


# Bandes de confiance monte carlo
# Calculer l'EQM en fct de alpha
par(mfrow=c(2,2))
for(a in c(0.1, 0.2, 0.5, 0.8)){
  N = 1000
  n = 1000
  hn = sigc * n^(-a)
  y_mc = matrix(data = NA, nrow = 1000, ncol = 121)
  for(i in 1:N){
    x = rnorm(n, mean=0, sd=1)
    y = f(x) + rnorm(n, mean=0, sd=sig2)
    res = ksmooth(x[1:n], y[1:n], x.point=t, bandwidth=hn)
   y_mc[i,] = res$y
  }

  y_inf = NULL
  y_sup = NULL
  for(i in 1:121){
    y_inf[i] = quantile(y_mc[,i], probs=0.025, na.rm=TRUE)
    y_sup[i] = quantile(y_mc[,i], probs=0.975, na.rm=TRUE)
  }

  plot(t, f(t), type="line", lwd=2)
  lines(t, y_inf, col="green", lwd=2)
  lines(t, y_sup, col="green", lwd=2)
  rug(x)
}

# n=100, 500, 1000 sur les bornes de confiances
# illustrer l'aspect local de l'estimation !!!!!!!!!!!!!!!!
# construire la bande théorique







