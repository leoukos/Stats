### Estimation non param√©trique

# Base trigo
phi = function(j, x){
	if(j==1)
		phi = 1
	else if(j%%2==0)
		phi = sqrt(2) * cos(2*pi*j*x) 
	else
		phi = sqrt(2) * cos(2*pi*j*x)
}


# Estimateur
est = function(j, y, t){
	n = length(t)
	est = 0
	for(k in 1:n){
		est = est + y[k] * phi(j, t[k])	
	}
	est = (1/n) * est
}

# Estimation de f
f = function(coef, x){
	n = length(x)
	N = length(coef)
	f = NULL
	for(k in 1:n) {
		f[k] = 0
		for(j in 1:N)
			f[k] = f[k] + coef[j] * phi(j, x[k])
	}
}

# MSE
mse = function(y,fn){
  n = length(y)
  mse = 0
  for(i in 1:n){
    mse = mse + (y[i] - fn[i])^2
  }
  mse = 1/n * mse
}

# Jeu de test
t = seq(0,1, by=0.001)
y = cos(10*seq(0,2*pi, by=2*pi*0.001)) + 0.5*cos(2*seq(0,2*pi, by=2*pi*0.001))
Y = jitter(y, factor=1, amount=1)
n = length(t)
beta = 1
N = floor(n^(1/(1+2*beta)))

#plot(t, Y)
par(mfrow=c(3, 3))

eqm = NULL
ind = 1
# Evaluation en fonction de beta
beta = c(0.1,0.2,0.5,0.8, 1, 1.2, 1.5, 2)
for(b in beta){
	N = floor(n^(1/(1+2*b)))
	
	teta = NULL
	for(i in 1:N){
		teta[i] = est(i, Y, t)
	}

	y_est = NULL
	for(k in 1:n) {
		y_est[k] = 0
		for(j in 1:N)
			y_est[k] = y_est[k] + teta[j] * phi(j, t[k])
	}


	plot(t, y, col="green", lwd=2, type="lines")
	lines(t, y_est, col="red", lwd=2)
	
	eqm[ind]=mse(y, y_est)
	ind = ind + 1
}

plot(beta, eqm)
